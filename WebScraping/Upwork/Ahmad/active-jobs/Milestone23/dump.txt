def additional_search(driver, term):
        print(f'Trying a different search for [yellow]{term}[/yellow]')
        url = 'https://www.haworth.com/eu/en/search.html?q='
        driver.execute_script(f'window.open("{url}", "_blank");')
        driver.switch_to.window(driver.window_handles[1])
        time.sleep(8)

        #close the cookie policy dialog box
        try:
            WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '//div/button[@id="CybotCookiebotDialogBodyButtonDecline"]'))).click()
        except:
            pass

        searchbar = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '//*[@id="search-results"]/div/div[1]/form/input')))
        searchbar.clear()
        searchbar.send_keys(term)
        # searchbar.send_keys(Keys.ENTER)

        # results = WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located((By.XPATH, '//ul[@class="listing-cards is-card-view grid-x grid-margin-x grid-margin-y"]/li')))
        # print(len(results))

        # if results:
        #     for result in results:
        #         name = WebDriverWait(result, 4).until(EC.presence_of_element_located((By.XPATH, './/h2[@class="product-listing-card__product-name"]')))
        #         print(name.text)

        #         if term.split()[0] in name.text:
        #             image = WebDriverWait(result, 3).until(EC.presence_of_element_located((By.XPATH, './/a//picture[@data-object-fit="cover"]/img'))).get_attribute('src')
        #             item_url = WebDriverWait(result, 3).until(EC.presence_of_element_located((By.XPATH, './/a[@class="listing-card product-listing-card"]'))).get_attribute('href')
        #             driver.execute_script(f'window.open("{item_url}", "_blank");')
        #             driver.switch_to.window(driver.window_handles[2])
        #             extract_data(item_url, image)
        #             time.sleep(2)
        #             driver.close()
        #             driver.switch_to.window(driver.window_handles[1])
        # else:
        #     for result in results:
        #         name = WebDriverWait(result, 3).until(EC.presence_of_element_located((By.XPATH, './/h2[@class="product-listing-card__product-name"]'))).text
        #         image = WebDriverWait(result, 3).until(EC.presence_of_element_located((By.XPATH, './/a//picture[@data-object-fit="cover"]/img'))).get_attribute('src')
        #         item_url = WebDriverWait(result, 3).until(EC.presence_of_element_located((By.XPATH, './/a[@class="listing-card product-listing-card"]'))).get_attribute('href')
        #         driver.execute_script(f'window.open("{item_url}", "_blank");')
        #         driver.switch_to.window(driver.window_handles[2])
        #         extract_data(item_url, image)

        #         time.sleep(2)
        #         driver.close()
        #         driver.switch_to.window(driver.window_handles[1])

        # def extract_data(item_url, image):
        #     description = WebDriverWait(driver, 3).until(EC.presence_of_element_located((By.XPATH, '//div/p'))).get_attribute('textContent')
        #     downloads = WebDriverWait(result, 3).until(EC.presence_of_element_located((By.XPATH, '//div[@class="download-block cell"]/a'))).get_attribute('href')

        #     data = {
        #         'url': item_url,
        #         'image': image,
        #         'description': description,
        #         'teer sheet': downloads
        #         }
        #     print(data)

        time.sleep(3)
        

        # try:
        #     listings = WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located((By.XPATH, '//ul[@class="listing-cards is-card-view grid-x grid-margin-x grid-margin-y"]/li/a')))
        #     print(len(listings))
        # except Exception as e:
        #     listings = None

        # if listings:
        #     names = []
        #     for listing in listings[:1]:
        #         name = listing.find_element(By.XPATH, '//div[@class="listing-card__details"]/h2').text
        #         print(name)
        

                except:
            
            additional_search(driver, term)
            driver.close()
            driver.switch_to.window(driver.window_handles[0])
            time.sleep(5)