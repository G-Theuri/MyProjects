archives = https://us.soccerway.com/national/kenya/premier-league/c715/archive/
rounds = https://www.sofascore.com/api/v1/unique-tournament/1644/season/19876/rounds
seasonIDs=[7752, 9841, 11265, 12921, 15858, 19876, 24023, 34876, 38844, 45686, 53922, 65071]
seasonlink = f'https://www.sofascore.com/tournament/football/kenya/premier-league/1644#id:{seasonID}'
standings = f'https://www.sofascore.com/api/v1/unique-tournament/1644/season/{seasonID}/standings/total'
x = [30-32]
matches_by_rounds = f'https://www.sofascore.com/api/v1/unique-tournament/1644/season/{seasonID}/events/round/{x}'
matches_by_dates = f'https://www.sofascore.com/api/v1/unique-tournament/1644/season/53922/team-events/total'
#for item in events:
id = 12654176 #At the end of every event
match_stats_page = f'https://www.sofascore.com/football/match/fc-talanta-sofapaka/{customId}#id:{id}'
match_summary = f'https://www.sofascore.com/api/v1/event/{id}/incidents'
##incidents


import os  
os.makedirs('folder/subfolder', exist_ok=True)  
df.to_csv('folder/subfolder/out.csv') 


import os
import shutil

for root, subdirs, files in os.walk('C:/directory'):
    for d in subdirs:
        if d == "old data":
            shutil.rmtree(os.path.join(root, d))



class Animal:
  def __init__(self, voice):
    self.voice = voice

# When a class instance is created, the instance variable
# 'voice' is created and set to the input value.
cat = Animal('Meow')
print(cat.voice) # Output: Meow

dog = Animal('Woof') 
print(dog.voice) # Output: Woof


seasonIDs = {7752:"2014", 9841:"2015", 11265:"2016", 12921:"2017", 15858:"2018", 19876:"2018-2019", 24023:"2019-2020",
             34876:"2020-2021", 38844:"2021-2022", 45686:"2022-2023", 53922:"2023-2024", 65071:"2024-2025"}

Here are the columns in the dataset to model:
Tournament,Season,Round,Date,StartTime,MatchID,MatchCustomID,MatchStatus,HomeTeamName,HomeTeamNameCode,HomeTeamID,AwayTeamName,AwayTeamNameCode,AwayTeamID,HomeScoreFT,AwayScoreFT
